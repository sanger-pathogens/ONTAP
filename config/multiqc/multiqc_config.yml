title: "Ampliseq Pipeline"
intro_text: False
report_comment: >
  This report has been generated by the Ampliseq pipeline.

# Avoid checking if new version of multiQC is available
no_version_check: true

# Export standalone version of report plots
export_plots: true

# Avoid automatic detection of software versions used by the pipeline (specify manually with "software_versions" section)
disable_version_detection: true

# Run only these modules
run_modules:
  - fastqc
  - samtools
  - pycoqc

# Order of modules
module_order:
  - pycoqc:
      name: "PycoQC"
      info: "This section of the report shows statistics and plots generated by PycoQC."
      path_filters:
        - "pycoqc/*"
  - fastqc:
      name: "FastQC (raw)"
      info: "This section of the report shows FastQC results before trimming."
      path_filters:
        - "fastqc_pre_trim/*.zip"
  - fastqc:
      name: "FastQC (trimmed)"
      info: "This section of the report shows FastQC results after trimming."
      path_filters:
        - "fastqc_post_trim/*.zip"
  - samtools:
      name: "Samtools (post-mapping)"
      info: "This section of the report shows statistics generated by <code>samtools stats</code> and <code>samtools flagstats</code> for reads mapped with minimap2."
      path_filters:
        - "samtools_stats_post_map/*"
  - samtools:
      name: "Samtools (post-filtering)"
      info: "This section of the report shows statistics generated by <code>samtools stats</code> and <code>samtools flagstats</code> after filtering reads based on alignment quality and overlap with target regions."
      path_filters:
        - "samtools_stats_post_filter/*"

section_comments:
  general_stats: "To see the QC stage to which a metric applies, hover over the column heading."

# Customise units
read_count_multiplier: 0.001
read_count_prefix: "K"
read_count_desc: "thousands"

base_count_multiplier: 0.001
base_count_prefix: "Kb"
base_count_desc: "thousands"

long_read_count_multiplier: 0.001
long_read_count_prefix: "K"
long_read_count_desc: "thousands"

# Customise FastQC behaviour (https://github.com/MultiQC/MultiQC/blob/v1.22.2/docs/modules/fastqc.md)
fastqc_config:
  status_checks: false
  top_overrepresented_sequences_by: "total"

# Customise plots
custom_plot_config:
  fastqc_status_checks: remove
  fastqc_status_checks-1: remove
  fastqc_per_base_sequence_quality_plot:
    title: "FastQC: Mean Base Quality Scores"
  fastqc_per_base_sequence_quality_plot-1:
    title: "FastQC: Mean Base Quality Scores"


# Customise the module search patterns to speed up execution time
#  - Skip module sub-tools that we are not interested in
#  - Replace file-content searching with filename pattern searching
#  - Don't add anything that is the same as the MultiQC default
# See https://multiqc.info/docs/#optimise-file-search-patterns for details
sp:
  samtools/stats:
    fn: "*.stats"
  samtools/flagstat:
    fn: "*.flagstats"
  samtools/idxstats:
    fn: "*.idxstats*"
