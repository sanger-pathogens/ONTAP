title: "Ampliseq Pipeline"
intro_text: False
report_comment: >
  This report has been generated by the Ampliseq pipeline.

# Avoid checking if new version of multiQC is available
no_version_check: true

# Export standalone version of report plots
export_plots: true

# Avoid automatic detection of software versions used by the pipeline (specify manually with "software_versions" section)
disable_version_detection: true

# Run only these modules
run_modules:
  - fastqc
  - samtools
  - pycoqc

# Order of modules
module_order:
  - pycoqc:
      name: "PycoQC"
      info: "This section of the report shows statistics and plots generated by PycoQC."
      path_filters:
        - "pycoqc/*"
  - fastqc:
      name: "FastQC"
      info: "This section of the report shows FastQC results before trimming."
      path_filters:
        - "fastqc/*.zip"
  - samtools:
      name: "Samtools"
      info: "This section of the report shows statistics generated by <code>samtools stats</code> and <code>samtools flagstats</code> for reads mapped with minimap2."
      path_filters:
        - "samtools_stats/*"

table_columns_visible:
  # General Stats table
  "FastQC":
    percent_duplicates: False
    percent_gc: False
    median_sequence_length: True

table_columns_name:
  # General Stats table
  "FastQC":
    total_sequences: "Seq Count (millions)"
    percent_fails: "% Modules Failed"

# extra_fn_clean_exts:
#   - "_dedup_metrics"
#   - "_sorted"


# Customise the module search patterns to speed up execution time
#  - Skip module sub-tools that we are not interested in
#  - Replace file-content searching with filename pattern searching
#  - Don't add anything that is the same as the MultiQC default
# See https://multiqc.info/docs/#optimise-file-search-patterns for details
sp:
  samtools/stats:
    fn: "*.stats"
  samtools/flagstat:
    fn: "*.flagstats"
  samtools/idxstats:
    fn: "*.idxstats*"
